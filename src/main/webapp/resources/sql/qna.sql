USE SCOTT;  -- 지금부터 spring 스키마에서 작업한다.

DROP TABLE IF EXISTS QNA_REPLY;
DROP TABLE IF EXISTS QNA;
CREATE TABLE QNA
(
    QNA_NO BIGINT NOT NULL AUTO_INCREMENT,
    MEMBER_ID VARCHAR(32) NOT NULL,
    QNA_TITLE VARCHAR(100) NOT NULL,
    QNA_CONTENT VARCHAR(1500),
    QNA_HIT INT ,
    QNA_CREATED DATETIME,
    QNA_MODIFIED DATETIME,
    CONSTRAINT QNA_PK PRIMARY KEY(QNA_NO)
);
CREATE TABLE QNA_REPLY
(
    QNA_REPLY_NO BIGINT NOT NULL AUTO_INCREMENT,
    QNA_NO BIGINT NOT NULL,
    MEMBER_ID VARCHAR(32) NOT NULL,
    QNA_REPLY_TITLE VARCHAR(100),
    QNA_REPLY_CONTENT VARCHAR(1500),
    QNA_REPLY_CREATED DATETIME,
    QNA_REPLY_STATE INT,
    QNA_REPLY_DEPTH INT,
    QNA_REPLY_GROUP_NO BIGINT,
    QNA_REPLY_GROUP_ORD INT,
    CONSTRAINT QNA_REPLY_NO_PK PRIMARY KEY(QNA_REPLY_NO)
);
ALTER TABLE QNA_REPLY 
	ADD CONSTRAINT QNA_REPLY_QNA_FK
		FOREIGN KEY(QNA_NO) REFERENCES QNA(QNA_NO)
			ON DELETE CASCADE;


INSERT INTO QNA
 			(QNA_NO, MEMBER_ID, QNA_TITLE, QNA_CONTENT, QNA_HIT, QNA_CREATED ,QNA_MODIFIED)
 		VALUES
 			(1, 'member123', 'qnatest1','qnatest1', 0, NOW() ,NOW());

INSERT INTO QNA
 			(QNA_NO, MEMBER_ID, QNA_TITLE, QNA_CONTENT, QNA_HIT, QNA_CREATED ,QNA_MODIFIED)
 		VALUES
 			(2, 'member123', 'qnatest2','qnatest2', 0, NOW() ,NOW());
COMMIT;

INSERT INTO QNA_REPLY
			(QNA_NO, MEMBER_ID, QNA_REPLY_CONTENT, QNA_REPLY_CREATED, QNA_REPLY_STATE, QNA_REPLY_DEPTH, QNA_REPLY_GROUP_NO, QNA_REPLY_GROUP_ORD)
		VALUES
			(1, 'qnareplytest1','qnareplytest1', NOW(), 1, 0, (select *from (select max(QNA_REPLY_NO)+1 from QNA_REPLY) next), 0);
INSERT INTO QNA_REPLY
			(QNA_NO, MEMBER_ID, QNA_REPLY_CONTENT, QNA_REPLY_CREATED, QNA_REPLY_STATE, QNA_REPLY_DEPTH, QNA_REPLY_GROUP_NO, QNA_REPLY_GROUP_ORD)
		VALUES
			(2, 'qnareplytest2','qnareplytest2', NOW(), 1, 0, (select *from (select max(QNA_REPLY_NO)+1 from QNA_REPLY) next), 0);
COMMIT;

SELECT QNA_NO, MEMBER_ID, QNA_REPLY_CONTENT, QNA_REPLY_CREATED, QNA_REPLY_STATE, QNA_REPLY_DEPTH, QNA_REPLY_GROUP_NO, QNA_REPLY_GROUP_ORD
  FROM QNA_REPLY;
  
SELECT QNA_REPLY_NO, QNA_NO, MEMBER_ID, QNA_REPLY_CONTENT, QNA_REPLY_CREATED, QNA_REPLY_STATE, QNA_REPLY_DEPTH,QNA_REPLY_GROUP_NO, QNA_REPLY_GROUP_ORD
		  FROM QNA_REPLY;
          
SELECT QNA_REPLY_NO, QNA_NO, MEMBER_ID, QNA_REPLY_CONTENT, QNA_REPLY_CREATED, QNA_REPLY_STATE, QNA_REPLY_DEPTH, QNA_REPLY_GROUP_NO, QNA_REPLY_GROUP_ORD
FROM QNA_REPLY
WHERE QNA_NO = 2
ORDER BY QNA_REPLY_GROUP_NO DESC,  QNA_REPLY_GROUP_ORD ;
